JANUS_STACK_NAME=whatever
LDFLAGS='-X github.com/cambiahealth/${JANUS_STACK_NAME}/config.buildVersion='"${JANUS_STACK_VERSION}"' -X github.com/cambiahealth/${JANUS_STACK_NAME}/config.buildServiceName='"${JANUS_STACK_NAME}"''
JANUS_STACK_VERSION=$$(if [ -d .git ]; then git rev-parse --short HEAD; else echo "v0.0.0"; fi)
BUILD_ARGS='GOARCH=amd64 CGO_ENABLED=0 GOOS=linux'

up: swagger-steps ## Make and start the app in containers
	@JANUS_STACK_NAME=${JANUS_STACK_NAME} \
  	JANUS_STACK_VERSION=${JANUS_STACK_VERSION} \
  	GITHUB_TOKEN=${GITHUB_TOKEN} \
	docker-compose -f docker-compose.yml up --detach --build

up-local-dev: swagger-steps ## start the local containers except the endpoint one
	docker-compose -f docker-compose.yml up --build

down: ## Stop the running containers
	docker-compose -f docker-compose.yml down

# Swagger
docs-in-container: go-install-swagger go-install-goswagger-ui go-install-statik swagger-steps # Generate swagger documentation in container

docs: go-install-swagger-local go-install-goswagger-ui go-install-statik swagger-steps ## Generate swagger documentation

swagger-serve: docs # Builds the Swagger docs but clicking on "Try it" fails
	swagger serve -F=swagger ./api/generated/prime-integration.swagger.yml

clean-generated-files: ## Delete previously generated swagger file and create new placeholder file
	@rm -rf api/generated
	@mkdir -p api/generated/swaggerui/statik
	@printf "// Code generated by statik. DO NOT EDIT. \n package statik" > api/generated/swaggerui/statik/statik.go

# Swagger dependencies
validate: ## Validate that the swagger.yml doc is well-formed
	swagger validate resources/prime-integration.swagger.yml

swagger-steps: clean-generated-files validate # Steps to generate swagger docs
	@echo "Compiling api..."
	go-swaggerui
	cp resources/prime-integration.swagger.yml /tmp/go-swaggerui/swagger.json;
	statik -src=/tmp/go-swaggerui -dest=api/generated/swaggerui;
	go mod tidy
	@echo "Completed successfully"

go-install-swagger:
	curl -o /usr/local/bin/swagger -L'#' "https://github.com/go-swagger/go-swagger/releases/download/v0.29.0/swagger_linux_amd64"
	chmod +x /usr/local/bin/swagger

go-install-swagger-local:
	# TODO: skip this step if already installed locally (yet somehow let following steps continue)
	curl -o /usr/local/bin/swagger -L'#' "https://github.com/go-swagger/go-swagger/releases/download/v0.29.0/swagger_darwin_amd64"
	chmod +x /usr/local/bin/swagger

go-install-goswagger-ui:
	@go install github.com/cambiahealth/go-swaggerui@latest

go-install-statik:
	@go install github.com/rakyll/statik@latest

do-not-commit-generated-files:
# statik.go and empty.go are intentionally near-empty to address compilation errors on a fresh repo clone when generated files have not been created
# statik.go will be updated when "make api" runs
# These git configurations provide a safety-net -- not foolproof -- so that local changes are not committed.
	# RESERVED FOR FUTURE USE. READ MAKEFILE.
	# @git update-index --skip-worktree api/generated/statik/statik.go

build: swagger-steps ## Build go binary
	@go build \
	-ldflags='-X github.com/cambiahealth/prime-integration-service/config.buildVersion='"${JANUS_STACK_VERSION}"' -X github.com/cambiahealth/prime-integration-service/config.buildServiceName='"${JANUS_STACK_NAME}"'' \
	-o bin/service ./cmd/...

clean: clean-generated-files ## Cleans up the current working directory
	@rm -rf *Gemfile || true;
	@rm -rf cucumber* || true;
	@rm -rf bin || true


docker: ## Build a docker image containing the service executable
	@docker build \
		--build-arg JANUS_STACK_NAME=${JANUS_STACK_NAME} \
		--build-arg JANUS_STACK_VERSION="${JANUS_STACK_VERSION}" \
		--build-arg GITHUB_TOKEN="${GITHUB_TOKEN}" \
	-t ${JANUS_STACK_NAME} \
	. 2>&1

.DEFAULT_GOAL := help

help:
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

.PHONY: api build clean cuke docker run test test-short test-integration run-command-with-docker-compose-dev go-install-goswagger-ui
